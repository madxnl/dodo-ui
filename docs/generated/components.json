[
  {
    "exportName": "default",
    "displayName": "Animated",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "list",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "appear",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "default"
      }
    ],
    "sourceFiles": [
      "../src/components/Animated.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Avatar",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "text",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "image",
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "string"
            },
            {
              "name": "null"
            }
          ]
        }
      },
      {
        "name": "round",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "sourceFiles": [
      "../src/components/Avatar.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Button",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "color",
        "description": "Set button color",
        "tags": {
          "example": [
            {
              "description": "color=\"success\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "ColorProp"
        }
      },
      {
        "name": "variant",
        "description": "Set button variant",
        "tags": {
          "example": [
            {
              "description": "variant=\"border\"",
              "title": "example"
            },
            {
              "description": "variant=\"text\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "\"text\""
            },
            {
              "name": "\"solid\""
            }
          ]
        }
      },
      {
        "name": "type",
        "description": "Set button type to 'submit' to trigger form submit",
        "tags": {
          "example": [
            {
              "description": "type=\"submit\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "\"button\""
            },
            {
              "name": "\"submit\""
            }
          ]
        }
      },
      {
        "name": "square",
        "description": "Square button for icons",
        "tags": {
          "example": [
            {
              "description": "square",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "rounded",
        "description": "Square button for icons",
        "tags": {
          "example": [
            {
              "description": "square",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "small",
        "description": "Change button size",
        "tags": {
          "example": [
            {
              "description": "small",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "active",
        "description": "Style button as active",
        "tags": {
          "example": [
            {
              "description": "active",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "default"
      }
    ],
    "sourceFiles": [
      "../src/components/Button.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Card",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "hoverable",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "active",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "gap",
        "required": false,
        "type": {
          "name": "GapSize"
        }
      },
      {
        "name": "padding",
        "required": false,
        "type": {
          "name": "GapSize"
        }
      }
    ],
    "slots": [
      {
        "name": "default"
      }
    ],
    "sourceFiles": [
      "../src/components/Card.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Checkbox",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "modelValue",
        "required": true,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "indeterminate",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "events": [
      {
        "name": "update:modelValue",
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "slots": [
      {
        "name": "default"
      }
    ],
    "sourceFiles": [
      "../src/components/Checkbox.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Chip",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "color",
        "required": false,
        "type": {
          "name": "ColorProp"
        }
      }
    ],
    "slots": [
      {
        "name": "before"
      },
      {
        "name": "default"
      },
      {
        "name": "after"
      }
    ],
    "sourceFiles": [
      "../src/components/Chip.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Column",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "gap",
        "description": "Add spacing between child elements",
        "tags": {
          "example": [
            {
              "description": "gap=\"2\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "SpacingValue"
        }
      },
      {
        "name": "padding",
        "description": "Amount of padding around the content",
        "tags": {
          "example": [
            {
              "description": "padding=\"4\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "SpacingValue"
        }
      },
      {
        "name": "grow",
        "description": "Grow to take up available space (when nested inside another Row)",
        "tags": {
          "example": [
            {
              "description": "grow",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "justify",
        "description": "Align content along main direction (horizontal for Row, vertical for Column)",
        "tags": {
          "example": [
            {
              "description": "justify=\"space-between\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "JustifyType"
        }
      },
      {
        "name": "align",
        "description": "Aligns children along cross-axis direction",
        "tags": {
          "example": [
            {
              "description": "align=\"end\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "AlignType"
        }
      },
      {
        "name": "wrap",
        "description": "Wrap contents over instead of shrinking",
        "tags": {
          "example": [
            {
              "description": "wrap",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "default"
      }
    ],
    "sourceFiles": [
      "../src/components/Column.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "CrashDialog",
    "description": "",
    "tags": {},
    "slots": [
      {
        "name": "body",
        "scoped": true,
        "bindings": [
          {
            "name": "error",
            "title": "binding"
          },
          {
            "name": "default-text",
            "title": "binding"
          }
        ]
      }
    ],
    "sourceFiles": [
      "../src/components/CrashDialog.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Datatable",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "rows",
        "required": true,
        "type": {
          "name": "Array",
          "elements": [
            {
              "name": "T"
            }
          ]
        }
      },
      {
        "name": "columns",
        "required": true,
        "type": {
          "name": "Array",
          "elements": [
            {
              "name": "DatatableColumn",
              "elements": [
                {
                  "name": "T"
                }
              ]
            }
          ]
        }
      },
      {
        "name": "selection",
        "required": false,
        "type": {
          "name": "Array",
          "elements": [
            {
              "name": "T"
            }
          ]
        }
      },
      {
        "name": "rowClick",
        "required": false,
        "type": {
          "name": "TSFunctionType"
        }
      },
      {
        "name": "selectBy",
        "required": false,
        "type": {
          "name": "TSTypeOperator"
        }
      },
      {
        "name": "stickyHeader",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "contentLoading",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "showFooter",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "showMore",
        "required": false,
        "type": {
          "name": "TSFunctionType"
        }
      },
      {
        "name": "sortValue",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "sortAsync",
        "required": false,
        "type": {
          "name": "TSFunctionType"
        }
      }
    ],
    "events": [
      {
        "name": "update:selection",
        "type": {
          "names": [
            "Array"
          ],
          "elements": [
            {
              "name": "unknown"
            }
          ]
        }
      },
      {
        "name": "update:sortValue",
        "type": {
          "names": [
            "union"
          ],
          "elements": [
            {
              "name": "string"
            },
            {
              "name": "undefined"
            }
          ]
        }
      }
    ],
    "slots": [
      {
        "name": "`${slotName(col)}-header`",
        "scoped": true,
        "description": "Column header",
        "bindings": [
          {
            "name": "name",
            "title": "binding"
          },
          {
            "title": "binding",
            "type": {
              "name": "object"
            },
            "name": "column"
          }
        ]
      },
      {
        "name": "slotName(col)",
        "scoped": true,
        "bindings": [
          {
            "name": "name",
            "title": "binding"
          },
          {
            "name": "row",
            "title": "binding"
          },
          {
            "name": "column",
            "title": "binding"
          }
        ]
      },
      {
        "name": "`${slotName(col)}-footer`",
        "scoped": true,
        "bindings": [
          {
            "name": "name",
            "title": "binding"
          },
          {
            "name": "column",
            "title": "binding"
          }
        ]
      }
    ],
    "sourceFiles": [
      "../src/components/Datatable.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Dialog",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "active",
        "required": true,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "default"
      },
      {
        "name": "controls"
      }
    ],
    "sourceFiles": [
      "../src/components/Dialog.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Dropdown",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "modelValue",
        "description": "Use v-model to modify dropdown state from outside",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "padding",
        "description": "Change padding around dropdown content",
        "required": false,
        "type": {
          "name": "GapSize"
        }
      },
      {
        "name": "gap",
        "description": "Change gap between dropdown content",
        "required": false,
        "type": {
          "name": "GapSize"
        }
      },
      {
        "name": "disabled",
        "description": "(temporaily) disable dropdown functionality",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "trigger",
        "description": "Change trigger event",
        "required": false,
        "type": {
          "name": "\"hover\""
        }
      }
    ],
    "events": [
      {
        "name": "update:modelValue",
        "type": {
          "names": [
            "boolean"
          ]
        }
      }
    ],
    "slots": [
      {
        "name": "default",
        "scoped": true,
        "bindings": [
          {
            "name": "is-active",
            "title": "binding"
          }
        ]
      },
      {
        "name": "dropdown",
        "scoped": true,
        "bindings": [
          {
            "name": "toggle",
            "title": "binding"
          }
        ]
      }
    ],
    "sourceFiles": [
      "../src/components/Dropdown.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "DropdownItem",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "active",
        "description": "Active item styling",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "emphasize",
        "description": "Emphasize item styling",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "separator",
        "description": "Show separator above item",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "before"
      },
      {
        "name": "default"
      },
      {
        "name": "text-secondary"
      },
      {
        "name": "after"
      }
    ],
    "sourceFiles": [
      "../src/components/DropdownItem.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Field",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "button",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "before"
      },
      {
        "name": "default"
      },
      {
        "name": "after"
      }
    ],
    "sourceFiles": [
      "../src/components/Field.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "FluidGrid",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "columnSize",
        "description": "Desired maximum size in pixels for columns (eg 300)",
        "tags": {
          "example": [
            {
              "description": "grow",
              "title": "example"
            }
          ]
        },
        "required": true,
        "type": {
          "name": "number"
        }
      },
      {
        "name": "gap",
        "description": "Add spacing between child elements",
        "tags": {
          "example": [
            {
              "description": "gap=\"2\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "SpacingValue"
        }
      },
      {
        "name": "padding",
        "description": "Amount of padding around the contents.",
        "tags": {
          "example": [
            {
              "description": "padding=\"4\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "SpacingValue"
        }
      },
      {
        "name": "autoFill",
        "description": "Prefer empty columns instead of stretching",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "alignItems",
        "description": "Aligns children along cross-axis direction (default 'start')",
        "tags": {
          "example": [
            {
              "description": "align=\"end\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "\"center\""
            },
            {
              "name": "\"end\""
            },
            {
              "name": "\"start\""
            },
            {
              "name": "\"stretch\""
            }
          ]
        }
      }
    ],
    "slots": [
      {
        "name": "default"
      }
    ],
    "sourceFiles": [
      "../src/components/FluidGrid.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Grid",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "columnSize",
        "description": "Desired maximum size in pixels for columns (eg 300)",
        "tags": {
          "example": [
            {
              "description": "grow",
              "title": "example"
            }
          ]
        },
        "required": true,
        "type": {
          "name": "ColumnSize"
        }
      },
      {
        "name": "gap",
        "description": "Add spacing between child elements",
        "tags": {
          "example": [
            {
              "description": "gap=\"2\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "SpacingValue"
        }
      },
      {
        "name": "padding",
        "description": "Amount of padding around the contents",
        "tags": {
          "example": [
            {
              "description": "padding=\"4\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "SpacingValue"
        }
      },
      {
        "name": "autoFill",
        "description": "Prefer empty columns instead of stretching",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "default"
      }
    ],
    "sourceFiles": [
      "../src/components/Grid.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Icon",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "name",
        "description": "The icon name",
        "tags": {
          "example": [
            {
              "description": "icon=\"plus\"",
              "title": "example"
            }
          ]
        },
        "required": true,
        "type": {
          "name": "IconName"
        }
      },
      {
        "name": "color",
        "description": "Change icon color",
        "tags": {
          "example": [
            {
              "description": "color=\"success\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "ColorProp"
        }
      },
      {
        "name": "fill",
        "description": "Filled variant",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "small",
        "required": false,
        "type": {
          "name": "TSLiteralType"
        }
      },
      {
        "name": "large",
        "required": false,
        "type": {
          "name": "TSLiteralType"
        }
      },
      {
        "name": "size",
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "\"xs\""
            },
            {
              "name": "\"s\""
            },
            {
              "name": "\"m\""
            },
            {
              "name": "\"l\""
            },
            {
              "name": "\"xl\""
            }
          ]
        }
      }
    ],
    "sourceFiles": [
      "../src/components/Icon.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Input",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "modelValue",
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "string"
            },
            {
              "name": "null"
            }
          ]
        }
      },
      {
        "name": "id",
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "string"
            },
            {
              "name": "null"
            }
          ]
        }
      },
      {
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "maxlength",
        "required": false,
        "type": {
          "name": "number"
        }
      },
      {
        "name": "type",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "tabIndex",
        "required": false,
        "type": {
          "name": "number"
        }
      },
      {
        "name": "name",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "autofocus",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "events": [
      {
        "name": "update:modelValue",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "sourceFiles": [
      "../src/components/Input.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Label",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "text",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "for",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "error",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "hint",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "required",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "default"
      }
    ],
    "sourceFiles": [
      "../src/components/Label.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "NavBar",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "mobile",
        "description": "Override mobile/desktop version, default is based on screen size",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "navbar-header",
        "description": "Navbar header section"
      },
      {
        "name": "default",
        "description": "Navbar middle section",
        "scoped": true,
        "bindings": [
          {
            "name": "in-mobile-bar",
            "title": "binding"
          }
        ]
      },
      {
        "name": "navbar-footer",
        "description": "Navbar footer section",
        "scoped": true,
        "bindings": [
          {
            "name": "in-mobile-bar",
            "title": "binding"
          }
        ]
      },
      {
        "name": "main",
        "description": "Main page content"
      }
    ],
    "sourceFiles": [
      "../src/components/NavBar.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "NavBarItem",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "text",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "link",
        "description": "Secondary line of text",
        "required": false,
        "type": {
          "name": "{\n  isActive: ComputedRef<boolean>\n  navigate: () => Promise<void>\n}"
        }
      },
      {
        "name": "textSecondary",
        "description": "Secondary line of text",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "icon",
        "description": "Icon name (or use 'icon' slot)",
        "required": false,
        "type": {
          "name": "IconName"
        }
      },
      {
        "name": "active",
        "description": "Style as active nav item",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "important",
        "description": "Important items are always fully opaque",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "icon"
      },
      {
        "name": "submenu"
      }
    ],
    "sourceFiles": [
      "../src/components/NavBarItem.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "NavBarNew",
    "description": "",
    "tags": {},
    "slots": [
      {
        "name": "default",
        "description": "Navbar middle section"
      },
      {
        "name": "navbar-footer",
        "description": "Navbar footer section"
      },
      {
        "name": "main",
        "description": "Main page content"
      }
    ],
    "sourceFiles": [
      "../src/components/NavBarNew.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "NavItem",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "link",
        "description": "Secondary line of text",
        "required": false,
        "type": {
          "name": "{\n  href: string | ComputedRef<string>\n  isActive: boolean | ComputedRef<boolean>\n  navigate: (e?: MouseEvent) => Promise<void | NavigationFailure>\n}"
        }
      },
      {
        "name": "text",
        "required": true,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "textSecondary",
        "description": "Secondary line of text",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "tooltipText",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "icon",
        "description": "Icon name (or use 'icon' slot)",
        "required": false,
        "type": {
          "name": "IconName"
        }
      },
      {
        "name": "important",
        "description": "Important items are always fully opaque",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "icon"
      },
      {
        "name": "submenu"
      }
    ],
    "sourceFiles": [
      "../src/components/NavItem.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Row",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "gap",
        "description": "Add spacing between child elements",
        "tags": {
          "example": [
            {
              "description": "gap=\"2\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "\"0\""
            },
            {
              "name": "\"1\""
            },
            {
              "name": "\"2\""
            },
            {
              "name": "\"3\""
            },
            {
              "name": "\"4\""
            },
            {
              "name": "\"5\""
            },
            {
              "name": "\"6\""
            },
            {
              "name": "\"8\""
            },
            {
              "name": "\"10\""
            },
            {
              "name": "\"12\""
            },
            {
              "name": "\"16\""
            }
          ]
        }
      },
      {
        "name": "padding",
        "description": "Amount of padding around the contents",
        "tags": {
          "example": [
            {
              "description": "padding=\"4\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "SpacingValue"
        }
      },
      {
        "name": "justify",
        "description": "Align content along main direction (horizontal for Row, vertical for Column)",
        "tags": {
          "example": [
            {
              "description": "justify=\"space-between\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "JustifyType"
        }
      },
      {
        "name": "align",
        "description": "Aligns children along cross-axis direction",
        "tags": {
          "example": [
            {
              "description": "align=\"end\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "AlignType"
        }
      },
      {
        "name": "wrap",
        "description": "Child elements will wrap instead of shrinking",
        "tags": {
          "example": [
            {
              "description": "wrap",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "grow",
        "description": "Grow to take up available space",
        "tags": {
          "example": [
            {
              "description": "grow",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "slots": [
      {
        "name": "default"
      }
    ],
    "sourceFiles": [
      "../src/components/Row.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "ScrollContainer",
    "description": "",
    "tags": {},
    "slots": [
      {
        "name": "default"
      }
    ],
    "sourceFiles": [
      "../src/components/ScrollContainer.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Select",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "options",
        "description": "Array of available options",
        "required": true,
        "type": {
          "name": "Array",
          "elements": [
            {
              "name": "Option"
            }
          ]
        }
      },
      {
        "name": "modelValue",
        "description": "v-model binding",
        "required": false,
        "type": {
          "name": "unknown"
        }
      },
      {
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "placeholder",
        "description": "Set placeholder text",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "multiple",
        "description": "Allow multiple select",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "variant",
        "required": false,
        "type": {
          "name": "\"buttons\""
        }
      },
      {
        "name": "size",
        "required": false,
        "type": {
          "name": "\"s\""
        }
      }
    ],
    "events": [
      {
        "name": "update:modelValue",
        "type": {
          "names": [
            "union"
          ],
          "elements": [
            {
              "name": "Array",
              "elements": [
                {
                  "name": "unknown"
                }
              ]
            },
            {
              "name": "unknown"
            }
          ]
        }
      }
    ],
    "slots": [
      {
        "name": "default",
        "scoped": true,
        "bindings": [
          {
            "name": "index",
            "title": "binding"
          },
          {
            "name": "option",
            "title": "binding"
          }
        ],
        "description": "Customize option html"
      }
    ],
    "sourceFiles": [
      "../src/components/Select.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "SelectButtons",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "options",
        "description": "Array of available options",
        "required": true,
        "type": {
          "name": "Array",
          "elements": [
            {
              "name": "{\n  value: any\n  label?: string\n}"
            }
          ]
        }
      },
      {
        "name": "modelValue",
        "description": "Currently selected value(s)",
        "required": false,
        "type": {
          "name": "unknown"
        }
      },
      {
        "name": "multiple",
        "description": "Allow multiple values to be selected (use array for modelValue)",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "disabled",
        "description": "Toggle disable",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "small",
        "description": "Small buttons",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "events": [
      {
        "name": "update:modelValue",
        "type": {
          "names": [
            "unknown"
          ]
        },
        "description": "Update of selected value(s), used by v-model syntax",
        "properties": [
          {
            "type": {
              "names": [
                "any"
              ]
            },
            "name": "value"
          }
        ],
        "tags": [
          {
            "title": "arg",
            "type": {
              "name": "any"
            },
            "name": "value"
          }
        ]
      }
    ],
    "slots": [
      {
        "name": "default",
        "scoped": true,
        "description": "Menu Item footer",
        "bindings": [
          {
            "title": "binding",
            "type": {
              "name": "object"
            },
            "name": "option",
            "description": "icon of the menu item"
          },
          {
            "title": "binding",
            "type": {
              "name": "string"
            },
            "name": "index",
            "description": "text of the menu item"
          }
        ]
      }
    ],
    "sourceFiles": [
      "../src/components/SelectButtons.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "SocialIcon",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "name",
        "description": "Social icon name",
        "tags": {
          "example": [
            {
              "description": "icon=\"google\"",
              "title": "example"
            }
          ]
        },
        "required": true,
        "type": {
          "name": "SocialIconName"
        }
      },
      {
        "name": "white",
        "description": "Render icon in a single color",
        "tags": {
          "example": [
            {
              "description": "color=\"success\"",
              "title": "example"
            }
          ]
        },
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "small",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "large",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "sourceFiles": [
      "../src/components/SocialIcon.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Spinner",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "color",
        "description": "Override default spinner color, or inherit text color",
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "\"inherit\""
            },
            {
              "name": "ColorProp"
            }
          ]
        },
        "defaultValue": {
          "func": false,
          "value": "undefined"
        }
      },
      {
        "name": "small",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "large",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "sourceFiles": [
      "../src/components/Spinner.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Stepper",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "stepIndex",
        "required": false,
        "type": {
          "name": "number"
        }
      },
      {
        "name": "steps",
        "required": true,
        "type": {
          "name": "Array",
          "elements": [
            {
              "name": "{\n  name: string\n  key?: string\n  hint?: string\n  submitText?: string\n  incomplete?: boolean\n  submitStep?: () => Promise<boolean> | boolean\n}"
            }
          ]
        }
      },
      {
        "name": "completed",
        "required": true,
        "type": {
          "name": "TSFunctionType"
        }
      }
    ],
    "events": [
      {
        "name": "update:stepIndex",
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "slots": [
      {
        "name": "step.key",
        "scoped": true,
        "bindings": [
          {
            "name": "name",
            "title": "binding"
          }
        ]
      }
    ],
    "sourceFiles": [
      "../src/components/Stepper.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Tabs",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "tabs",
        "required": true,
        "type": {
          "name": "Array",
          "elements": [
            {
              "name": "Tab"
            }
          ]
        }
      },
      {
        "name": "tabIndex",
        "required": false,
        "type": {
          "name": "number"
        }
      }
    ],
    "events": [
      {
        "name": "update:tabIndex",
        "type": {
          "names": [
            "number"
          ]
        }
      }
    ],
    "slots": [
      {
        "name": "tab-title",
        "scoped": true,
        "bindings": [
          {
            "name": "i",
            "title": "binding"
          },
          {
            "name": "tab",
            "title": "binding"
          }
        ]
      },
      {
        "name": "currentTab.slot ?? 'default'",
        "scoped": true,
        "bindings": [
          {
            "name": "name",
            "title": "binding"
          },
          {
            "name": "tab",
            "title": "binding"
          }
        ]
      }
    ],
    "sourceFiles": [
      "../src/components/Tabs.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "TextInput",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "id",
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "string"
            },
            {
              "name": "null"
            }
          ]
        }
      },
      {
        "name": "modelValue",
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "string"
            },
            {
              "name": "null"
            }
          ]
        }
      },
      {
        "name": "placeholder",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "rows",
        "required": false,
        "type": {
          "name": "number"
        }
      },
      {
        "name": "maxlength",
        "required": false,
        "type": {
          "name": "number"
        }
      },
      {
        "name": "type",
        "required": false,
        "type": {
          "name": "\"search\""
        }
      },
      {
        "name": "tabIndex",
        "required": false,
        "type": {
          "name": "number"
        }
      },
      {
        "name": "name",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "autofocus",
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    ],
    "events": [
      {
        "name": "update:modelValue",
        "type": {
          "names": [
            "string"
          ]
        }
      }
    ],
    "slots": [
      {
        "name": "before"
      },
      {
        "name": "after"
      }
    ],
    "sourceFiles": [
      "../src/components/TextInput.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "Tooltip",
    "description": "",
    "tags": {},
    "props": [
      {
        "name": "text",
        "required": false,
        "type": {
          "name": "string"
        }
      },
      {
        "name": "disabled",
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      {
        "name": "side",
        "required": false,
        "type": {
          "name": "union",
          "elements": [
            {
              "name": "\"left\""
            },
            {
              "name": "\"right\""
            },
            {
              "name": "\"top\""
            },
            {
              "name": "\"bottom\""
            }
          ]
        }
      }
    ],
    "slots": [
      {
        "name": "default"
      },
      {
        "name": "tooltip-text"
      }
    ],
    "sourceFiles": [
      "../src/components/Tooltip.vue"
    ]
  },
  {
    "exportName": "default",
    "displayName": "TransitionCollapse",
    "description": "",
    "tags": {},
    "slots": [
      {
        "name": "default"
      }
    ],
    "sourceFiles": [
      "../src/components/TransitionCollapse.vue"
    ]
  }
]